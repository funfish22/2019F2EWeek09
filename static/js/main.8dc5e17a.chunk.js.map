{"version":3,"sources":["config/library/redux/store/Home/action.js","resources/components/atoms/Search/Search.tsx","resources/components/atoms/Search/index.tsx","resources/components/atoms/NoteCard/NoteCard.tsx","resources/components/atoms/NoteCard/index.tsx","pages/default/NoteList/NoteList.tsx","pages/default/NoteList/index.tsx","resources/components/atoms/Editor/Editor.tsx","resources/components/atoms/Editor/index.tsx","pages/default/Home/Home.tsx","pages/default/Home/index.tsx","pages/App/Router.tsx","resources/components/atoms/Logo/Logo.tsx","resources/components/atoms/Logo/index.tsx","resources/components/atoms/AddNoteButton/AddNoteButton.tsx","resources/components/atoms/AddNoteButton/index.tsx","pages/App/Menu.tsx","pages/App/App.tsx","pages/App/index.tsx","config/library/redux/store/Home/reducer.js","config/library/redux/store/rootReducers.js","services/api/Home.js","config/library/redux/store/Home/saga.js","config/library/redux/store/rootSagas.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Types","GET_NOTE_REQUEST","GET_NOTE_SUCCESS","CREATE_NOTE_REQUEST","CREATE_NOTE_SUCCESS","GET_TARGET_CARD","GET_TARGET_CARD_SUCCESS","CREATE_NOTE_INFO","CREATE_NOTE_TEXT","HANDLE_LIVINIG","getNoteSuccess","notes","type","payload","getTargetCard","id","beforeCard","getTargetCardSuccess","note","handleLivinig","isLivinig","Search","props","state","className","SearchRoot","Icon","Input","placeholder","styled","div","span","input","NoteCard","Note","NoteId","onClick","sort","a","b","map","row","isCurrent","NoteCardRoot","key","NoteTitleBG","NoteTitle","title","NoteGutter","NoteText","text","NoteFooter","NoteTagRoot","tags","NoteTag","tagTitle","files","NoteIcon","NoteTime","time","defaultProps","h2","hr","p","ul","li","NoteList","useSelector","Home","TargetNodeId","targetCardId","NoteListRoot","Gutter","useState","React","editorProps","controls","colors","Editor","dispatch","useDispatch","BraftEditor","createEditorState","editorState","createEditor","onChange","Content","useEffect","setEditorContentAsync","language","value","editor","raw","toRAW","contentHtml","toHTML","contentText","blocks","forEach","TargetNoteId","TargetNoteTitle","targetCard","TargetNoteContent","content","TargetNote","EditorRoot","EditorTitle","e","target","html","createNoteText","Router","path","exact","component","Logo","LogoTitle","h1","AddNoteButton","AddNoteButtonRoot","AddIcon","AddNoteText","button","Menu","MenuRoot","LogoRoot","Today","Date","getFullYear","getMonth","getDate","getTime","createNoteRequest","createNoteSuccess","App","Container","initState","searchStar","action","find","targetCardInfo","targetCardArray","targetCardText","targetCardTextArray","rootReducer","combineReducers","getNote","axios","get","createNote","post","getCreateCard","fixNote","undefined","put","watchGetNoteRequest","watchCreateNoteSuccess","postNote","watchPostNote","call","api","result","actions","data","takeEvery","takeLatest","HomeSagas","fork","rootSagas","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","run","defaults","withCredentials","baseURL","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dc5e17a.chunk.js","sourcesContent":["export const Types = {\r\n    GET_NOTE_REQUEST: 'home/get_note_request',\r\n    GET_NOTE_SUCCESS: 'home/get_note_success',\r\n\r\n    CREATE_NOTE_REQUEST: 'home/create_note_request',\r\n    CREATE_NOTE_SUCCESS: 'home/create_note_success',\r\n\r\n    GET_TARGET_CARD: 'home/get_target_card',\r\n    GET_TARGET_CARD_SUCCESS: 'home/get_target_card_success',\r\n\r\n    CREATE_NOTE_INFO: 'home/create_note_info',\r\n    CREATE_NOTE_TEXT: 'home/create_note_text',\r\n\r\n    HANDLE_LIVINIG: 'home/handle_livinig'\r\n}\r\n\r\nexport const getNoteRequest = () => ({\r\n    type: Types.GET_NOTE_REQUEST\r\n})\r\n\r\nexport const getNoteSuccess = ({notes}) => ({\r\n    type: Types.GET_NOTE_SUCCESS,\r\n    payload: {\r\n        notes\r\n    }\r\n})\r\n\r\nexport const createNoteRequest = ({title, time, id}) => {\r\n    return{\r\n        type: Types.CREATE_NOTE_REQUEST,\r\n        payload: {\r\n            title,\r\n            time,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const createNoteSuccess = ({title, time, id}) => {\r\n    return{\r\n        type: Types.CREATE_NOTE_SUCCESS,\r\n        payload: {\r\n            title,\r\n            time,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTargetCard = (id, beforeCard) => ({\r\n    type: Types.GET_TARGET_CARD,\r\n    payload: {\r\n        id,\r\n        beforeCard\r\n    }\r\n})\r\n\r\nexport const getTargetCardSuccess = ({note}) => ({\r\n    type: Types.GET_TARGET_CARD_SUCCESS,\r\n    payload: {\r\n        note\r\n    }\r\n})\r\n\r\nexport const createNoteInfo = (id, title) => ({\r\n    type: Types.CREATE_NOTE_INFO,\r\n    payload: {\r\n        id,\r\n        title\r\n    }\r\n})\r\n\r\nexport const createNoteText = (id, text, html) => ({\r\n    type: Types.CREATE_NOTE_TEXT,\r\n    payload: {\r\n        id,\r\n        text,\r\n        html\r\n    }\r\n})\r\n\r\nexport const handleLivinig = (isLivinig) => ({\r\n    type: Types.HANDLE_LIVINIG,\r\n    payload: {\r\n        isLivinig\r\n    }\r\n})","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nconst Search = (props: Props, state: State) => {\r\n    const { className } = props;\r\n\r\n    return(\r\n        <SearchRoot className={className}>\r\n            <Icon className=\"icon-search_24px\"></Icon>\r\n            <Input type=\"text\" placeholder=\"搜尋您的筆記\"/>\r\n        </SearchRoot>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SearchRoot = styled.div`\r\n    display: inline-flex;\r\n    width: 290px;\r\n    max-width: 100%;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    background-color: #E6E6E6;\r\n    padding: 12px 20px;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    font-size: 21px;\r\n    color: #333;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-family: 'Helvetica Neue','Microsoft JhengHei',sans-serif;\r\n    padding: 0;\r\n    border: none;\r\n    background-color: transparent;\r\n    outline: none;\r\n    margin-left: 12px;\r\n    flex: 1;\r\n    font-weight: bold;\r\n\r\n    &::-webkit-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &:-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &::-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &input:-ms-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n`;","import Search from './Search';\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst source = [\r\n    {\r\n        \"title\": \"first\",\r\n        \"content\": \"<span>內容</span>\",\r\n        \"time\": \"2019/9/5\",\r\n        \"tags\": [\r\n            {\r\n            \"tagTitle\": \"健康\",\r\n            \"id\": 1\r\n            }\r\n        ],\r\n        \"files\": false,\r\n        \"id\": 1\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    Note: Array<{\r\n        id: number,\r\n        title: string,\r\n        time: string,\r\n        tags: Array<{\r\n            id: number,\r\n            tagTitle: string\r\n        }>,\r\n        files: boolean,\r\n        text: string\r\n    }>,\r\n    NoteId: number,\r\n    onClick: any\r\n}\r\n\r\ninterface State { }\r\n\r\ninterface MyStyle {\r\n    isCurrent: boolean\r\n}\r\n\r\nconst NoteCard = (props: Props, state: State) => {\r\n    const { Note, NoteId, onClick } = props;\r\n\r\n    return(\r\n        <>\r\n            {\r\n                Note && Note.sort((a: any, b: any) => a.id > b.id ? -1 : 1).map((row: any) => {\r\n                    const isCurrent = NoteId === row.id\r\n\r\n                    return(\r\n                        <NoteCardRoot key={row.id} onClick={() => onClick(row.id)}>\r\n                            <NoteTitleBG isCurrent={isCurrent}/>\r\n                            <NoteTitle>{row.title}</NoteTitle>\r\n                            <NoteGutter/>\r\n                            <NoteText>{row.text}</NoteText>\r\n                            <NoteFooter>\r\n                                <NoteTagRoot>\r\n                                    {\r\n                                        row.tags && row.tags.map((row: any) => (\r\n                                            <NoteTag key={row.id}>{row.tagTitle}</NoteTag>\r\n                                        ))\r\n                                    }\r\n                                </NoteTagRoot>\r\n                                {\r\n                                    row.files && (\r\n                                        <NoteIcon className=\"icon-attachment\"/>\r\n                                    )\r\n                                }\r\n                                <NoteTime>{row.time}</NoteTime>\r\n                            </NoteFooter>\r\n                        </NoteCardRoot>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nNoteCard.defaultProps = {\r\n    Note: source\r\n}\r\n\r\nexport default NoteCard;\r\n\r\nconst NoteTitleBG = styled.div`\r\n    position: absolute;\r\n    border-radius: 5px;\r\n    border: 3px solid #2F419B;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: ${(props: MyStyle) => !props.isCurrent ? '0' : '1'};\r\n    transition: .2s;\r\n\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 0 33px 33px 0;\r\n        border-color: transparent #F4F6F7 transparent transparent;\r\n        top: -4px;\r\n        right: -4px;\r\n    }\r\n\r\n    &:before{\r\n        content: '';\r\n        position: absolute;\r\n        width: 42px;\r\n        height: 3px;\r\n        background-color: #2F419B;\r\n        transform: rotate(45deg);\r\n        right: -8px;\r\n        top: 12px;\r\n        z-index: 1;\r\n    }\r\n`\r\n\r\nconst NoteCardRoot = styled.div`\r\n    width: 290px;\r\n    max-width: 100%;\r\n    padding: 35px 23px 23px 23px;\r\n    background: linear-gradient(to left bottom,transparent 50%,#e9ebf4 0) no-repeat 100% 0/32px 32px,linear-gradient(-135deg,transparent 23px,#fff 0);\r\n    border-radius: 4px;\r\n    position: relative;\r\n    box-shadow: 0px 0px 6px #F0F0F0;\r\n    \r\n    &:hover{\r\n        ${NoteTitleBG} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 0px 47px 47px 0;\r\n        border-color: transparent #F4F6F7 transparent transparent;\r\n        top: -9px;\r\n        right: -9px;\r\n        z-index: 1;\r\n    }\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: 15px;\r\n    }\r\n\r\n    \r\n`;\r\n\r\nconst NoteTitle = styled.h2`\r\n    color: #555;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteGutter = styled.hr`\r\n    padding: 0;\r\n    margin: 14px 0;\r\n    border: none;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #ECECEC;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteText = styled.p`\r\n    height: 96px;\r\n    max-height: 96px;\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 4;\r\n    -webkit-box-orient: vertical;\r\n    word-break: break-all;\r\n    margin-bottom: 7px;\r\n`;\r\n\r\nconst NoteFooter = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteTagRoot = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst NoteTag = styled.li`\r\n    color: #2F419B;\r\n    padding: 3px 16px;\r\n    font-size: 14px;\r\n    background-color: #E9EBF4;\r\n    border-radius: 4px;\r\n\r\n    &:not(:first-of-type){\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n\r\nconst NoteIcon = styled.span`\r\n    margin-left: auto;\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    color: #666;\r\n`;\r\n\r\nconst NoteTime = styled.div`\r\n    font-size: 15px;\r\n    color: #666666;\r\n`;","import NoteCard from './NoteCard';\r\n\r\nexport default NoteCard;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Search from 'resources/components/atoms/Search';\r\nimport NoteCard from 'resources/components/atoms/NoteCard';\r\n\r\ninterface Props {\r\n    onClick: any\r\n}\r\n\r\ninterface State {\r\n    Home: { \r\n        note: Array<{\r\n            id: number,\r\n            title: string,\r\n            time: string,\r\n            tags: Array<{\r\n                    id: number,\r\n                    tagTitle: string\r\n                }>,\r\n            files: boolean,\r\n            text: string\r\n        }>,\r\n        targetCardId: number\r\n    }\r\n}\r\n\r\nconst NoteList = (props: Props, state: State) => {\r\n    const { onClick } = props;\r\n\r\n    const Note = useSelector((state: State) => state.Home.note);\r\n    const TargetNodeId = useSelector((state: State) => state.Home.targetCardId);\r\n\r\n    return(\r\n        <NoteListRoot>\r\n            <Search/>\r\n            <Gutter/>\r\n            <NoteCard Note={Note} NoteId={TargetNodeId} onClick={onClick}/>\r\n        </NoteListRoot>\r\n    )\r\n}\r\n\r\nexport default NoteList;\r\n\r\nconst NoteListRoot = styled.div`\r\n    background-color: #F4F6F7;\r\n    border-right: 1px solid #E1E1E1;\r\n    padding: 50px 33px;\r\n`;\r\n\r\nconst Gutter = styled.hr`\r\n    width: calc(100% + 66px);\r\n    margin: 20px 0 33px -33px;\r\n    border: none;\r\n    padding: 0;\r\n    background-color: #D9D9D9;\r\n    height: 1px;\r\n`;","import NoteList from './NoteList';\r\n\r\nexport default NoteList;","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport BraftEditor, {BraftEditorProps, ExtendControlType} from 'braft-editor';\r\nimport { handleLivinig } from 'config/library/redux/store/Home/action';\r\n\r\nimport 'braft-editor/dist/index.css';\r\nimport './index.css';\r\n\r\ninterface Props {\r\n    className?: string,\r\n    onChange: any,\r\n    Content: string\r\n}\r\n\r\ninterface State {\r\n    Home: {\r\n        targetCard: {\r\n            editorState: any,\r\n            text: any\r\n        },\r\n        isLivinig: boolean\r\n    }\r\n}\r\n\r\nconst { useState } = React;\r\n\r\nconst editorProps: BraftEditorProps = {\r\n    controls: [\r\n        'headings', 'font-family', 'font-size', 'text-color', 'hr', 'italic', 'bold', 'letter-spacing', 'line-height', \r\n        'link', 'list-ol', 'list-ul', 'blockquote', 'code', 'clear', 'emoji', 'media', 'redo', 'remove-styles', \r\n        'separator', 'strike-through', 'superscript', 'subscript', 'text-align', 'text-color', 'text-indent', \r\n        'underline', 'undo', 'fullscreen'\r\n    ],\r\n    colors:[\r\n        '#000000', '#333333', '#666666', '#999999', '#cccccc', '#ffffff',\r\n        '#61a951', '#16a085', '#07a9fe', '#003ba5', '#8e44ad', '#f32784',\r\n        '#c0392b', '#d35400', '#f39c12', '#fdda00', '#7f8c8d', '#2c3e50'\r\n    ]\r\n}\r\n\r\nconst Editor = (props: Props, state: State) => {\r\n    const isLivinig = useSelector((state: State) => state.Home.isLivinig)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [editorState, createEditor] = useState(BraftEditor.createEditorState(null))\r\n    const { onChange, Content } = props;\r\n\r\n    const handleChange = (editor: any) => {\r\n        const raw = editor.toRAW(true)\r\n        const contentHtml = editor.toHTML()\r\n        let contentText = ''\r\n        raw.blocks.forEach((row: any) => {\r\n            contentText += row.text\r\n        })\r\n\r\n        createEditor(editor)\r\n        onChange(contentText, contentHtml)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isLivinig === true) {\r\n            setEditorContentAsync()\r\n        }\r\n        \r\n        return () => {\r\n            dispatch(handleLivinig(false))\r\n        }\r\n    });\r\n\r\n    const setEditorContentAsync = () => {\r\n        isLivinig && createEditor(BraftEditor.createEditorState(Content))\r\n    }\r\n\r\n    const {className} = props;\r\n\r\n    return(\r\n        <BraftEditor className={className} {...editorProps} language=\"zh-hant\" value={editorState} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default Editor;","import Editor from './Editor';\r\n\r\nexport default Editor;","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getNoteRequest, createNoteInfo, createNoteText, getTargetCard, handleLivinig } from 'config/library/redux/store/Home/action';\r\n\r\nimport NoteList from 'pages/default/NoteList';\r\nimport Editor from 'resources/components/atoms/Editor';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n    Home: {\r\n        targetCardId: number,\r\n        targetCard: any,\r\n    }\r\n}\r\n\r\nconst Home = (props: Props, state: State) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const TargetNoteId = useSelector((state: State) => state.Home.targetCardId);\r\n    const TargetNoteTitle = useSelector((state: State) => state.Home.targetCard.title);\r\n    const TargetNoteContent = useSelector((state: State) => state.Home.targetCard.content);\r\n    const TargetNote = useSelector((state: State) => state.Home.targetCard);\r\n\r\n    const handleCardTitle = (e: any) => {\r\n        dispatch(createNoteInfo(TargetNoteId, e.target.value))\r\n    }\r\n\r\n    const handleCardText = (text: string, html: string) => {\r\n        dispatch(createNoteText(TargetNoteId, text, html))\r\n    }\r\n\r\n    const targetCard = (id: number) => {\r\n        dispatch(getTargetCard(id, TargetNote))\r\n        dispatch(handleLivinig(true))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getNoteRequest())\r\n    }, [dispatch]);\r\n\r\n    return(\r\n        <>\r\n            <NoteList onClick={targetCard}/>\r\n            <EditorRoot>\r\n                <EditorTitle type=\"text\" placeholder=\"無標題\" onChange={handleCardTitle} value={TargetNoteTitle}/>\r\n                <Editor onChange={handleCardText} Content={TargetNoteContent}/>\r\n            </EditorRoot>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\nconst EditorRoot = styled.div`\r\n    padding: 52px 46px;\r\n`;\r\n\r\nconst EditorTitle = styled.input`\r\n    font-weight: bold;\r\n    font-size: 21px;\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0 5px;\r\n    margin-bottom: 5px;\r\n\r\n    &::-webkit-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &:-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &::-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &input:-ms-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n`;","import Home from './Home';\r\n\r\nexport default Home;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from 'pages/default/Home';\n\n\nfunction Router() {\n    return(\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n\n            {/* <Route component={PageNotFound} /> */}\n        </Switch>\n    )\n}\n\nexport default Router;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nconst Logo = (props: Props, state: State) => {\r\n    const { className } = props;\r\n\r\n    return(\r\n        <LogoTitle className={className}>FreeNote</LogoTitle>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n\r\nconst LogoTitle = styled.h1`\r\n    display: inline-block;\r\n    font-size: 22px;\r\n    position: relative;\r\n    color: #fff;\r\n\r\n    &:after{\r\n        position: absolute;\r\n        content: '';\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        bottom: 8px;\r\n        right: -10px;\r\n    }\r\n`;","import Logo from './Logo';\n\nexport default Logo;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: any,\r\n    onClick: any\r\n}\r\n\r\ninterface State {}\r\n\r\nconst AddNoteButton: React.FunctionComponent<Props> = (props: Props, state: State) => {\r\n    const { className, onClick } = props;\r\n\r\n    return(\r\n        <AddNoteButtonRoot className={className} onClick={onClick}>\r\n            <AddIcon></AddIcon>\r\n            <AddNoteText>新增筆記</AddNoteText>\r\n        </AddNoteButtonRoot>\r\n    )\r\n}\r\n\r\nexport default AddNoteButton;\r\n\r\nconst AddNoteButtonRoot = styled.button`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 11px 46px 11px 30px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 0px 6px rgba(255,255,255,.29);\r\n    border-radius: 8px;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    font-family: 'Helvetica Neue', 'Microsoft JhengHei', sans-serif;\r\n    transition: .5s;\r\n\r\n    &:hover{\r\n        box-shadow: 0px 0px 15px rgba(255,255,255,.5);\r\n    }\r\n`;\r\n\r\nconst AddNoteText = styled.p`\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n    font-weight: bold;\r\n    color: #2F419B;\r\n`;\r\n\r\nconst AddIcon = styled.div`\r\n    width: 26px;\r\n    height: 26px;\r\n    border-radius: 50%;\r\n    background-color: #2F419B;\r\n    position: relative;\r\n    margin-right: 16px;\r\n\r\n    &:after,&:before {\r\n        position: absolute;\r\n        content: '';\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background-color: #fff;\r\n    }\r\n\r\n    &:after {\r\n        width: 14px;\r\n        height: 2px;\r\n    }\r\n\r\n    &:before{\r\n        width: 2px;\r\n        height: 14px;\r\n    }\r\n`;","import AddNoteButton from './AddNoteButton';\r\n\r\nexport default AddNoteButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from 'react-redux';\r\nimport { createNoteRequest, createNoteSuccess, getTargetCard, handleLivinig } from 'config/library/redux/store/Home/action';\r\n\r\nimport Logo from 'resources/components/atoms/Logo';\r\nimport AddNoteButton from 'resources/components/atoms/AddNoteButton';\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nconst Menu = (props: Props, state: State) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const create = () => {\r\n        const Today = new Date();\r\n        const title = '無標題';\r\n        const time = `${Today.getFullYear()}/${Today.getMonth() + 1}/${Today.getDate()}`;\r\n        const id = Today.getTime();\r\n\r\n        dispatch(createNoteRequest({title, time, id}));\r\n        dispatch(createNoteSuccess({title, time, id}));\r\n        dispatch(getTargetCard(id))\r\n        dispatch(handleLivinig(true))\r\n    }\r\n    \r\n    return(\r\n        <MenuRoot>\r\n            <LogoRoot/>\r\n            <AddNoteButtonRoot onClick={create}/>\r\n        </MenuRoot>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n\r\nconst MenuRoot = styled.div`\r\n    width: 256px;\r\n    min-height: 100vh;\r\n    background-color: #2F419B;\r\n    padding: 50px 33px;\r\n`;\r\n\r\nconst LogoRoot = styled(Logo)`\r\n    margin-left: 24px;\r\n`\r\n\r\nconst AddNoteButtonRoot = styled(AddNoteButton)`\r\n    margin: 33px 0;\r\n`","import React, { useState } from 'react';\r\nimport { HashRouter, BrowserRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Router from './Router';\r\nimport Menu from './Menu';\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nconst App = (props: Props, state: State) => {\r\n\r\n    return(\r\n        <HashRouter>\r\n            <Container>\r\n                <Menu/>\r\n                <Router/>\r\n            </Container>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n`;","import App from './App';\r\n\r\nexport default App;","import { Types } from './action'\r\n\r\nconst initState = {\r\n    searchStar: false,\r\n    targetCard: {\r\n        title: '',\r\n        text: '',\r\n        editorState: null,\r\n    },\r\n    targetCardId: '',\r\n    isLivinig: true,\r\n    note: [],\r\n    beforeCard: ''\r\n}\r\n\r\n\r\nconst Home = (state = initState, action) => {\r\n    switch(action.type){\r\n        case Types.GET_NOTE_SUCCESS :\r\n            return {\r\n                ...state,\r\n                note: action.payload.notes\r\n            }\r\n\r\n        case Types.CREATE_NOTE_REQUEST :\r\n            return {\r\n                ...state,\r\n                note: [...state.note, {\r\n                    title: action.payload.title,\r\n                    content: '',\r\n                    time: action.payload.time,\r\n                    tags: [],\r\n                    files: false,\r\n                    editorState: null,\r\n                    id: action.payload.id\r\n                }]\r\n            }\r\n\r\n        case Types.GET_TARGET_CARD :\r\n            const targetCard = state.note.find((row) => row.id === action.payload.id)\r\n            return {\r\n                ...state,\r\n                targetCardId: action.payload.id,\r\n                targetCard: targetCard,\r\n                beforeCard: action.payload.beforeCard\r\n            }\r\n\r\n        case Types.GET_TARGET_CARD_SUCCESS :\r\n            return {\r\n                ...state,\r\n                targetCard: action.payload.note,\r\n            }\r\n\r\n        case Types.CREATE_NOTE_INFO :\r\n            const targetCardInfo = {\r\n                ...state.targetCard,\r\n                title: action.payload.title\r\n            }\r\n\r\n            const targetCardArray = state.note.map((row) => {\r\n                if(row.id === action.payload.id) {\r\n                    return {\r\n                        ...row,\r\n                        title: action.payload.title\r\n                    }\r\n                } else {\r\n                    return row\r\n                }\r\n            })\r\n            \r\n            return {\r\n                ...state,\r\n                targetCard: targetCardInfo,\r\n                note: targetCardArray\r\n            }\r\n\r\n        case Types.CREATE_NOTE_TEXT:\r\n            const targetCardText = {\r\n                ...state.targetCard,\r\n                text: action.payload.text,\r\n                content: action.payload.html\r\n            }\r\n\r\n            const targetCardTextArray = state.note.map((row) => {\r\n                if(row.id === action.payload.id) {\r\n                    return {\r\n                        ...row,\r\n                        text: action.payload.text,\r\n                        content: action.payload.html\r\n                    }\r\n                } else {\r\n                    return row\r\n                }\r\n            })\r\n            \r\n            return {\r\n                ...state,\r\n                targetCard: targetCardText,\r\n                note: targetCardTextArray\r\n            }\r\n\r\n        case Types.HANDLE_LIVINIG :\r\n            return {\r\n                ...state,\r\n                isLivinig: action.payload.isLivinig\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Home;","import { combineReducers } from 'redux';\r\n\r\nimport Home from './Home/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    Home\r\n})\r\n\r\nexport default rootReducer","import axios from 'axios';\r\n\r\nexport const getNote = () => {\r\n    return axios.get('/note')\r\n};\r\n\r\nexport const createNote = ({title, time, id}) => {\r\n    return axios.post('/note', {\r\n        title,\r\n        content: null,\r\n        time,\r\n        tags: [],\r\n        files: false,\r\n        text: '',\r\n        id\r\n    })\r\n};\r\n\r\nexport const getCreateCard = id => {\r\n    return axios.get(`/note/${id}`)\r\n}\r\n\r\nexport const fixNote = ({id, note}) => {\r\n    if(id === undefined) return\r\n    return axios.put(`/note/${id}`, note)\r\n}","import {takeEvery, takeLatest, take, call, fork, put} from 'redux-saga/effects';\r\nimport * as actions from './action';\r\nimport * as api from 'services/api/Home';\r\n\r\nfunction* getNote() {\r\n    try{\r\n        const result = yield call(api.getNote);\r\n        yield put(actions.getNoteSuccess({\r\n            notes: result.data\r\n        }))\r\n    }catch (e) {\r\n        \r\n    }\r\n}\r\n\r\nfunction* watchGetNoteRequest() {\r\n    yield takeEvery(actions.Types.GET_NOTE_REQUEST, getNote)\r\n}\r\n\r\nfunction* createNote(action, payload) {\r\n    try{\r\n        yield call(api.createNote, {title: action.payload.title, time: action.payload.time, id: action.payload.id});\r\n        yield getCreateCard(action.payload.id)\r\n    }catch (e) {\r\n        \r\n    }\r\n}\r\n\r\nfunction* getCreateCard(action, payload) {\r\n    try{\r\n        const result = yield call(api.getCreateCard, (action))\r\n        yield put(actions.getTargetCardSuccess({\r\n            note: result.data\r\n        }))\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* watchCreateNoteSuccess() {\r\n    yield takeLatest(actions.Types.CREATE_NOTE_SUCCESS, createNote)\r\n}\r\n\r\nfunction* postNote(action, payload) {\r\n    try{\r\n        yield call(api.fixNote, {id: action.payload.beforeCard.id, note: action.payload.beforeCard})\r\n    }catch (e) {\r\n\r\n    }\r\n}\r\n\r\nfunction* watchPostNote() {\r\n    yield takeLatest(actions.Types.GET_TARGET_CARD, postNote)\r\n}\r\n\r\nconst HomeSagas = [\r\n    fork(watchGetNoteRequest),\r\n    fork(watchCreateNoteSuccess),\r\n    fork(watchPostNote)\r\n];\r\n\r\nexport default HomeSagas;","import {all} from 'redux-saga/effects';\r\nimport HomeSagas from './Home/saga';\r\n\r\nexport default function* rootSagas() {\r\n    yield all([\r\n        ...HomeSagas\r\n    ])\r\n}","import React from 'react';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Entrance from 'pages/App';\r\n\r\nimport rootReducers from 'config/library/redux/store/rootReducers';\r\nimport rootSagas from 'config/library/redux/store/rootSagas';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(\r\n  rootReducers,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\nsagaMiddleware.run(rootSagas);\r\n\r\naxios.defaults.withCredentials = true;\r\nif(process.env.NODE_ENV === \"development\") {\r\n  axios.defaults.baseURL = 'http://localhost:3003/'\r\n} else {\r\n  axios.defaults.baseURL = 'http://localhost:3003/'\r\n}\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nclass App extends React.Component<Props, State> {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Entrance/>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport './reset.css';\r\nimport 'resources/assets/icon/style.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}