{"version":3,"sources":["config/library/redux/store/Home/action.js","resources/components/atoms/Search/Search.tsx","resources/components/atoms/Search/index.tsx","resources/components/atoms/NoteCard/NoteCard.tsx","resources/components/atoms/NoteCard/index.tsx","pages/default/NoteList/NoteList.tsx","pages/default/NoteList/index.tsx","resources/components/atoms/Editor/Editor.tsx","resources/components/atoms/Editor/index.tsx","pages/default/Home/Home.tsx","pages/default/Home/index.tsx","pages/App/Router.tsx","resources/components/atoms/Logo/Logo.tsx","resources/components/atoms/Logo/index.tsx","resources/components/atoms/AddNoteButton/AddNoteButton.tsx","resources/components/atoms/AddNoteButton/index.tsx","pages/App/Menu.tsx","pages/App/App.tsx","pages/App/index.tsx","config/library/redux/store/Home/reducer.js","config/library/redux/store/rootReducers.js","services/api/Home.js","config/library/redux/store/Home/saga.js","config/library/redux/store/rootSagas.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Types","GET_NOTE_REQUEST","GET_NOTE_SUCCESS","CREATE_NOTE_REQUEST","CREATE_NOTE_SUCCESS","getNoteSuccess","notes","type","payload","Search","props","state","className","SearchRoot","Icon","Input","placeholder","styled","div","span","input","NoteCard","Note","sort","a","b","id","map","row","NoteCardRoot","key","NoteTitleBG","NoteTitle","title","NoteGutter","NoteText","ReactHtmlParser","content","NoteFooter","NoteTagRoot","tags","NoteTag","tagTitle","files","NoteIcon","NoteTime","time","defaultProps","h2","hr","p","ul","li","NoteList","useSelector","Home","note","NoteListRoot","Gutter","useState","React","editorProps","controls","colors","Editor","BraftEditor","createEditorState","editorState","createEditor","language","value","onChange","console","log","toHTML","useDispatch","dispatch","EditorRoot","EditorTitle","Router","path","exact","component","Logo","LogoTitle","h1","AddNoteButton","onClick","AddNoteButtonRoot","AddIcon","AddNoteText","button","Menu","MenuRoot","LogoRoot","Today","Date","getFullYear","getMonth","getDate","getTime","createNoteRequest","createNoteSuccess","App","Container","initState","searchStar","action","rootReducer","combineReducers","getNote","axios","get","createNote","post","watchGetNoteRequest","watchCreateNoteSuccess","call","api","result","put","actions","data","takeEvery","takeLatest","HomeSagas","fork","rootSagas","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","run","defaults","withCredentials","baseURL","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44974684.chunk.js","sourcesContent":["export const Types = {\r\n    GET_NOTE_REQUEST: 'home/get_note_request',\r\n    GET_NOTE_SUCCESS: 'home/get_note_success',\r\n\r\n    CREATE_NOTE_REQUEST: 'home/create_note_request',\r\n    CREATE_NOTE_SUCCESS: 'home/create_note_success'\r\n}\r\n\r\nexport const getNoteRequest = () => ({\r\n    type: Types.GET_NOTE_REQUEST\r\n})\r\n\r\nexport const getNoteSuccess = ({notes}) => ({\r\n    type: Types.GET_NOTE_SUCCESS,\r\n    payload: {\r\n        notes\r\n    }\r\n})\r\n\r\nexport const createNoteRequest = ({title, time, id}) => {\r\n    return{\r\n        type: Types.CREATE_NOTE_REQUEST,\r\n        payload: {\r\n            title,\r\n            time,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport const createNoteSuccess = ({title, time, id}) => {\r\n    return{\r\n        type: Types.CREATE_NOTE_SUCCESS,\r\n        payload: {\r\n            title,\r\n            time,\r\n            id\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nconst Search = (props: Props, state: State) => {\r\n    const { className } = props;\r\n\r\n    return(\r\n        <SearchRoot className={className}>\r\n            <Icon className=\"icon-search_24px\"></Icon>\r\n            <Input type=\"text\" placeholder=\"搜尋您的筆記\"/>\r\n        </SearchRoot>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\nconst SearchRoot = styled.div`\r\n    display: inline-flex;\r\n    width: 290px;\r\n    max-width: 100%;\r\n    align-items: center;\r\n    border-radius: 8px;\r\n    background-color: #E6E6E6;\r\n    padding: 12px 20px;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n    font-size: 21px;\r\n    color: #333;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    font-family: 'Helvetica Neue','Microsoft JhengHei',sans-serif;\r\n    padding: 0;\r\n    border: none;\r\n    background-color: transparent;\r\n    outline: none;\r\n    margin-left: 12px;\r\n    flex: 1;\r\n    font-weight: bold;\r\n\r\n    &::-webkit-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &:-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &::-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &input:-ms-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n`;","import Search from './Search';\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst source = [\r\n    {\r\n        \"title\": \"first\",\r\n        \"content\": \"<span>內容</span>\",\r\n        \"time\": \"2019/9/5\",\r\n        \"tags\": [\r\n            {\r\n            \"tagTitle\": \"健康\",\r\n            \"id\": 1\r\n            }\r\n        ],\r\n        \"files\": false,\r\n        \"id\": 1\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    Note: Array<{\r\n        id: number,\r\n        title: string,\r\n        time: string,\r\n        tags: Array<{\r\n            id: number,\r\n            tagTitle: string\r\n        }>,\r\n        files: boolean\r\n    }>\r\n}\r\n\r\ninterface State { }\r\n\r\nconst NoteCard = (props: Props, state: State) => {\r\n    const { Note } = props;\r\n\r\n    return(\r\n        <>\r\n            {\r\n                Note && Note.sort((a: any, b: any) => a.id > b.id ? -1 : 1).map((row: any) => (\r\n                    <NoteCardRoot key={row.id}>\r\n                        <NoteTitleBG/>\r\n                        <NoteTitle>{row.title}</NoteTitle>\r\n                        <NoteGutter/>\r\n                        <NoteText>{ReactHtmlParser(row.content)}</NoteText>\r\n                        <NoteFooter>\r\n                            <NoteTagRoot>\r\n                                {\r\n                                    row.tags && row.tags.map((row: any) => (\r\n                                        <NoteTag key={row.id}>{row.tagTitle}</NoteTag>\r\n                                    ))\r\n                                }\r\n                            </NoteTagRoot>\r\n                            {\r\n                                row.files && (\r\n                                    <NoteIcon className=\"icon-attachment\"/>\r\n                                )\r\n                            }\r\n                            <NoteTime>{row.time}</NoteTime>\r\n                        </NoteFooter>\r\n                    </NoteCardRoot>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nNoteCard.defaultProps = {\r\n    Note: source\r\n}\r\n\r\nexport default NoteCard;\r\n\r\nconst NoteTitleBG = styled.div`\r\n    position: absolute;\r\n    border-radius: 5px;\r\n    border: 3px solid #2F419B;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    transition: .2s;\r\n\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 0 33px 33px 0;\r\n        border-color: transparent #F4F6F7 transparent transparent;\r\n        top: -4px;\r\n        right: -4px;\r\n    }\r\n\r\n    &:before{\r\n        content: '';\r\n        position: absolute;\r\n        width: 42px;\r\n        height: 3px;\r\n        background-color: #2F419B;\r\n        transform: rotate(45deg);\r\n        right: -8px;\r\n        top: 12px;\r\n        z-index: 1;\r\n    }\r\n`\r\n\r\nconst NoteCardRoot = styled.div`\r\n    width: 290px;\r\n    max-width: 100%;\r\n    padding: 35px 23px 23px 23px;\r\n    background: linear-gradient(to left bottom,transparent 50%,#e9ebf4 0) no-repeat 100% 0/32px 32px,linear-gradient(-135deg,transparent 23px,#fff 0);\r\n    border-radius: 4px;\r\n    position: relative;\r\n    box-shadow: 0px 0px 6px #F0F0F0;\r\n    \r\n    &:hover{\r\n        ${NoteTitleBG} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 0px 47px 47px 0;\r\n        border-color: transparent #F4F6F7 transparent transparent;\r\n        top: -9px;\r\n        right: -9px;\r\n        z-index: 1;\r\n    }\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: 15px;\r\n    }\r\n`;\r\n\r\nconst NoteTitle = styled.h2`\r\n    color: #555;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteGutter = styled.hr`\r\n    padding: 0;\r\n    margin: 14px 0;\r\n    border: none;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #ECECEC;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteText = styled.p`\r\n    height: 103px;\r\n    max-height: 103px;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteFooter = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nconst NoteTagRoot = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst NoteTag = styled.li`\r\n    color: #2F419B;\r\n    padding: 3px 16px;\r\n    font-size: 14px;\r\n    background-color: #E9EBF4;\r\n    border-radius: 4px;\r\n\r\n    &:not(:first-of-type){\r\n        margin-left: 5px;\r\n    }\r\n`;\r\n\r\nconst NoteIcon = styled.span`\r\n    margin-left: auto;\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    color: #666;\r\n`;\r\n\r\nconst NoteTime = styled.div`\r\n    font-size: 15px;\r\n    color: #666666;\r\n`;","import NoteCard from './NoteCard';\r\n\r\nexport default NoteCard;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Search from 'resources/components/atoms/Search';\r\nimport NoteCard from 'resources/components/atoms/NoteCard';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n    Home: { note: Array<{\r\n        id: number,\r\n        title: string,\r\n        time: string,\r\n        tags: Array<{\r\n            id: number,\r\n            tagTitle: string\r\n        }>,\r\n        files: boolean\r\n    }>}\r\n}\r\n\r\nconst NoteList = (props: Props, state: State) => {\r\n    const Note = useSelector((state: State) => state.Home.note);\r\n\r\n    return(\r\n        <NoteListRoot>\r\n            <Search/>\r\n            <Gutter/>\r\n            <NoteCard Note={Note}/>\r\n        </NoteListRoot>\r\n    )\r\n}\r\n\r\nexport default NoteList;\r\n\r\nconst NoteListRoot = styled.div`\r\n    background-color: #F4F6F7;\r\n    border-right: 1px solid #E1E1E1;\r\n    padding: 50px 33px;\r\n`;\r\n\r\nconst Gutter = styled.hr`\r\n    width: calc(100% + 66px);\r\n    margin: 20px 0 33px -33px;\r\n    border: none;\r\n    padding: 0;\r\n    background-color: #D9D9D9;\r\n    height: 1px;\r\n`;","import NoteList from './NoteList';\r\n\r\nexport default NoteList;","import React from 'react';\r\nimport BraftEditor, {BraftEditorProps, ExtendControlType} from 'braft-editor';\r\n\r\nimport 'braft-editor/dist/index.css';\r\nimport './index.css';\r\n\r\ninterface Props {\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nconst { useState } = React;\r\n\r\nconst editorProps: BraftEditorProps = {\r\n    controls: [\r\n        'headings', 'font-family', 'font-size', 'text-color', 'hr', 'italic', 'bold', 'letter-spacing', 'line-height', \r\n        'link', 'list-ol', 'list-ul', 'blockquote', 'code', 'clear', 'emoji', 'media', 'redo', 'remove-styles', \r\n        'separator', 'strike-through', 'superscript', 'subscript', 'text-align', 'text-color', 'text-indent', \r\n        'underline', 'undo', 'fullscreen'\r\n    ],\r\n    colors:[\r\n        '#000000', '#333333', '#666666', '#999999', '#cccccc', '#ffffff',\r\n        '#61a951', '#16a085', '#07a9fe', '#003ba5', '#8e44ad', '#f32784',\r\n        '#c0392b', '#d35400', '#f39c12', '#fdda00', '#7f8c8d', '#2c3e50'\r\n    ]\r\n}\r\n\r\nconst Editor = (props: Props, state: State) => {\r\n    const [editorState, createEditor] = useState(BraftEditor.createEditorState(null))\r\n\r\n    const handleChange = (editorState: any) => {\r\n        console.log(editorState.toHTML())\r\n        createEditor(editorState)\r\n    }\r\n\r\n    const {className} = props;\r\n\r\n    return(\r\n        <BraftEditor className={className} {...editorProps} language=\"zh-hant\" value={editorState} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default Editor;","import Editor from './Editor';\r\n\r\nexport default Editor;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from 'react-redux';\r\nimport { getNoteRequest } from 'config/library/redux/store/Home/action';\r\n\r\nimport NoteList from 'pages/default/NoteList';\r\nimport Editor from 'resources/components/atoms/Editor';\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nconst Home = (props: Props, state: State) => {\r\n    const dispatch = useDispatch();\r\n\r\n    dispatch(getNoteRequest())\r\n    \r\n    return(\r\n        <>\r\n            <NoteList/>\r\n            <EditorRoot>\r\n                <EditorTitle type=\"text\" placeholder=\"無標題\"/>\r\n                <Editor/>\r\n            </EditorRoot>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\nconst EditorRoot = styled.div`\r\n    padding: 52px 46px;\r\n`;\r\n\r\nconst EditorTitle = styled.input`\r\n    font-weight: bold;\r\n    font-size: 21px;\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0 5px;\r\n    margin-bottom: 5px;\r\n\r\n    &::-webkit-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &:-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &::-moz-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n\r\n    &input:-ms-input-placeholder{\r\n        color: #A3A3A3;\r\n    }\r\n`;","import Home from './Home';\r\n\r\nexport default Home;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from 'pages/default/Home';\n\n\nfunction Router() {\n    return(\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n\n            {/* <Route component={PageNotFound} /> */}\n        </Switch>\n    )\n}\n\nexport default Router;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: string\r\n}\r\n\r\ninterface State {}\r\n\r\nconst Logo = (props: Props, state: State) => {\r\n    const { className } = props;\r\n\r\n    return(\r\n        <LogoTitle className={className}>FreeNote</LogoTitle>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n\r\nconst LogoTitle = styled.h1`\r\n    display: inline-block;\r\n    font-size: 22px;\r\n    position: relative;\r\n    color: #fff;\r\n\r\n    &:after{\r\n        position: absolute;\r\n        content: '';\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        bottom: 8px;\r\n        right: -10px;\r\n    }\r\n`;","import Logo from './Logo';\n\nexport default Logo;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    className?: any,\r\n    onClick: any\r\n}\r\n\r\ninterface State {}\r\n\r\nconst AddNoteButton: React.FunctionComponent<Props> = (props: Props, state: State) => {\r\n    const { className, onClick } = props;\r\n\r\n    return(\r\n        <AddNoteButtonRoot className={className} onClick={onClick}>\r\n            <AddIcon></AddIcon>\r\n            <AddNoteText>新增筆記</AddNoteText>\r\n        </AddNoteButtonRoot>\r\n    )\r\n}\r\n\r\nexport default AddNoteButton;\r\n\r\nconst AddNoteButtonRoot = styled.button`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 11px 46px 11px 30px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 0px 6px rgba(255,255,255,.29);\r\n    border-radius: 8px;\r\n    white-space: nowrap;\r\n    background-color: #fff;\r\n    font-family: 'Helvetica Neue', 'Microsoft JhengHei', sans-serif;\r\n    transition: .5s;\r\n\r\n    &:hover{\r\n        box-shadow: 0px 0px 15px rgba(255,255,255,.5);\r\n    }\r\n`;\r\n\r\nconst AddNoteText = styled.p`\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n    font-weight: bold;\r\n    color: #2F419B;\r\n`;\r\n\r\nconst AddIcon = styled.div`\r\n    width: 26px;\r\n    height: 26px;\r\n    border-radius: 50%;\r\n    background-color: #2F419B;\r\n    position: relative;\r\n    margin-right: 16px;\r\n\r\n    &:after,&:before {\r\n        position: absolute;\r\n        content: '';\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background-color: #fff;\r\n    }\r\n\r\n    &:after {\r\n        width: 14px;\r\n        height: 2px;\r\n    }\r\n\r\n    &:before{\r\n        width: 2px;\r\n        height: 14px;\r\n    }\r\n`;","import AddNoteButton from './AddNoteButton';\r\n\r\nexport default AddNoteButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from 'react-redux';\r\nimport { createNoteRequest, createNoteSuccess } from 'config/library/redux/store/Home/action';\r\n\r\nimport Logo from 'resources/components/atoms/Logo';\r\nimport AddNoteButton from 'resources/components/atoms/AddNoteButton';\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nconst Menu = (props: Props, state: State) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const create = () => {\r\n        const Today = new Date();\r\n        const title = '無標題';\r\n        const time = `${Today.getFullYear()}/${Today.getMonth() + 1}/${Today.getDate()}`;\r\n        const id = Today.getTime();\r\n\r\n        dispatch(createNoteRequest({title, time, id}));\r\n        dispatch(createNoteSuccess({title, time, id}));\r\n    }\r\n    \r\n    return(\r\n        <MenuRoot>\r\n            <LogoRoot/>\r\n            <AddNoteButtonRoot onClick={create}/>\r\n        </MenuRoot>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n\r\nconst MenuRoot = styled.div`\r\n    width: 256px;\r\n    min-height: 100vh;\r\n    background-color: #2F419B;\r\n    padding: 50px 33px;\r\n`;\r\n\r\nconst LogoRoot = styled(Logo)`\r\n    margin-left: 24px;\r\n`\r\n\r\nconst AddNoteButtonRoot = styled(AddNoteButton)`\r\n    margin: 33px 0;\r\n`","import React, { useState } from 'react';\r\nimport { HashRouter, BrowserRouter} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Router from './Router';\r\nimport Menu from './Menu';\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nconst App = (props: Props, state: State) => {\r\n\r\n    return(\r\n        <HashRouter>\r\n            <Container>\r\n                <Menu/>\r\n                <Router/>\r\n            </Container>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n`;","import App from './App';\r\n\r\nexport default App;","import { Types } from './action'\r\n\r\nconst initState = {\r\n    searchStar: false\r\n}\r\n\r\n\r\nconst Home = (state = initState, action) => {\r\n    switch(action.type){\r\n        case Types.GET_NOTE_SUCCESS :\r\n            return {\r\n                ...state,\r\n                note: action.payload.notes\r\n            }\r\n\r\n        case Types.CREATE_NOTE_REQUEST:\r\n            return {\r\n                ...state,\r\n                note: [...state.note, {\r\n                    title: action.payload.title,\r\n                    content: '',\r\n                    time: action.payload.time,\r\n                    tags: [],\r\n                    files: false,\r\n                    id: action.payload.id\r\n                }]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Home;","import { combineReducers } from 'redux';\r\n\r\nimport Home from './Home/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    Home\r\n})\r\n\r\nexport default rootReducer","import axios from 'axios';\r\n\r\nexport const getNote = () => {\r\n    return axios.get('/note')\r\n};\r\n\r\nexport const createNote = ({title, time, id}) => {\r\n    return axios.post('/note', {\r\n        title,\r\n        content: '',\r\n        time,\r\n        tags: [],\r\n        files: false,\r\n        id\r\n    })\r\n};","import {takeEvery, takeLatest, take, call, fork, put} from 'redux-saga/effects';\r\nimport * as actions from './action';\r\nimport * as api from 'services/api/Home';\r\n\r\nfunction* getNote() {\r\n    try{\r\n        const result = yield call(api.getNote);\r\n        yield put(actions.getNoteSuccess({\r\n            notes: result.data\r\n        }))\r\n    }catch (e) {\r\n        \r\n    }\r\n}\r\n\r\nfunction* watchGetNoteRequest() {\r\n    yield takeEvery(actions.Types.GET_NOTE_REQUEST, getNote)\r\n}\r\n\r\nfunction* createNote(action, payload) {\r\n    try{\r\n        yield call(api.createNote, {title: action.payload.title, time: action.payload.time, id: action.payload.id});\r\n    }catch (e) {\r\n        \r\n    }\r\n}\r\n\r\nfunction* watchCreateNoteSuccess() {\r\n    yield takeLatest(actions.Types.CREATE_NOTE_SUCCESS, createNote)\r\n}\r\n\r\nconst HomeSagas = [\r\n    fork(watchGetNoteRequest),\r\n    fork(watchCreateNoteSuccess)\r\n];\r\n\r\nexport default HomeSagas;","import {all} from 'redux-saga/effects';\r\nimport HomeSagas from './Home/saga';\r\n\r\nexport default function* rootSagas() {\r\n    yield all([\r\n        ...HomeSagas\r\n    ])\r\n}","import React from 'react';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Entrance from 'pages/App';\r\n\r\nimport rootReducers from 'config/library/redux/store/rootReducers';\r\nimport rootSagas from 'config/library/redux/store/rootSagas';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(\r\n  rootReducers,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n)\r\n\r\nsagaMiddleware.run(rootSagas);\r\n\r\naxios.defaults.withCredentials = true;\r\nif(process.env.NODE_ENV === \"development\") {\r\n  axios.defaults.baseURL = 'http://localhost:3003/'\r\n} else {\r\n  axios.defaults.baseURL = 'http://localhost:3003/'\r\n}\r\n\r\ninterface Props { }\r\n\r\ninterface State { }\r\n\r\nclass App extends React.Component<Props, State> {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Entrance/>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport './reset.css';\r\nimport 'resources/assets/icon/style.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}